<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
	
	<!-- 配置注解扫描器 @Service -->
	<context:component-scan base-package="cn.blaze.service.impl"/>
	
	<!-- 加载资源文件 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!-- 配置资源文件 -->
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 配置连接池，数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="jdbcUrl" value="jdbc:mysql://58ef866279f59.sh.cdb.myqcloud.com:6681/liulei?characterEncoding=utf-8"></property>
		<property name="user" value="cdb_outerroot"></property>
		<property name="password" value="Liu982195"></property>
		
		<!-- <property name="driverClass" value="${driver}"></property>
		<property name="jdbcUrl" value="${url}"></property>
		<property name="user" value="${mysqluser}"></property>
		<property name="password" value="${mysqlpassword}"></property> -->
		<!-- 连接池特性配置 -->
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
        <!-- <property name="acquireIncrement">
            <value>${c3p0.acquireIncrement}</value>
            <value>3</value>
        </property> -->
        <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
        <!-- <property name="initialPoolSize">
            <value>${c3p0.initialPoolSize}</value>
        </property>
        <property name="minPoolSize">
            <value>${c3p0.minPoolSize}</value>
        </property>
        <property name="maxPoolSize">
            <value>${c3p0.maxPoolSize}</value>
        </property>-->
        <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <!-- <property name="maxIdleTime">
        	<value>${c3p0.maxIdleTime}</value>
        </property>-->
        <!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
        <!-- <property name="idleConnectionTestPeriod">
            <value>${c3p0.idleConnectionTestPeriod}</value>
        </property>-->
        <!-- JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements   
                            属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。   
                            如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0-->
        <!-- <property name="maxStatements">
            <value>${c3p0.maxStatements}</value>
        </property>-->
        <!-- c3p0是异步操作的，缓慢的JDBC操作通过帮助进程完成。扩展这些操作可以有效的提升性能 通过  
                                  多线程实现多个操作同时被执行。Default: 3-->
        <!-- <property name="numHelperThreads">
            <value>${c3p0.numHelperThreads}</value>
        </property>-->
	</bean>
	
	<!-- sqlSession工厂 mapper的接口配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 加载全局的配置文件 -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
		<property name="dataSource" ref="dataSource" />
		<!-- 配置类型别名，如下配置后xml中不需要写类的全路径  -->
		<property name="typeAliasesPackage" value="cn.blaze.domain,cn.blaze.Vo"></property>
		<!-- 配置mapper的扫描，找到所有的mapper.xml映射文件。 -->
		<property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"/>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.blaze.dao" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
</beans>