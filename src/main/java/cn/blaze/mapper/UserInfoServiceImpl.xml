<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.blaze.dao.UserInfoDao">

  <resultMap id="BaseResultMap" type="cn.blaze.domain.UserInfo">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="isvalid" jdbcType="CHAR" property="isvalid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  
  <sql id="Base_Column_List">
    id, student_id, user_name, password, status, type, isvalid, create_time, update_time 
  </sql>
  
  <insert id="insertUserInfoWithIdAuto" parameterType="cn.blaze.domain.UserInfo">
	<selectKey keyProperty="id" resultType="String" order="BEFORE">
	    select replace(uuid(),'-','') from dual
	</selectKey>
    insert into user_info (
    	id, 
    	student_id, 
    	user_name, 
      	password, 
      	status, 
      	type, 
      	isvalid, 
      	create_time, 
      	update_time
    ) values (
    	#{id,jdbcType=VARCHAR}, 
    	#{studentId,jdbcType=VARCHAR}, 
    	#{userName,jdbcType=VARCHAR}, 
      	#{password,jdbcType=VARCHAR}, 
      	#{status,jdbcType=VARCHAR}, 
      	#{type,jdbcType=VARCHAR}, 
      	#{isvalid,jdbcType=CHAR},
      	#{createTime,jdbcType=TIMESTAMP}, 
      	#{updateTime,jdbcType=TIMESTAMP}
     )
  </insert>
  
	<select id="selectById" parameterType="java.lang.String" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" />
		from user_info
		where id = #{id,jdbcType=VARCHAR}
	</select>
	
	<select id="selectUserInfoByPara" parameterType="java.util.Map" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" />
		from user_info
		where 1=1 
		<if test="id != null">
		  AND id=#{id,jdbcType=VARCHAR}
		</if>
		<if test="studentId != null">
		  AND student_id=#{studentId,jdbcType=VARCHAR}
		</if>
		<if test="userName != null">
		  AND user_name=#{userName,jdbcType=VARCHAR}
		</if>
		<if test="password != null">
		  AND password=#{password,jdbcType=VARCHAR}
		</if>
		<if test="status != null">
		  AND status=#{status,jdbcType=VARCHAR}
		</if>
		<if test="type != null">
		  AND type=#{type,jdbcType=VARCHAR}
		</if>
		<if test="isvalid != null">
		  AND isvalid=#{isvalid,jdbcType=CHAR}
		</if>
	</select>
	
	<update id="updateById" parameterType="cn.blaze.domain.UserInfo">
		update user_info
		<set>
		  <if test="studentId != null">
		    student_id = #{studentId,jdbcType=VARCHAR},
		  </if>
		  <if test="userName != null">
		    user_name = #{userName,jdbcType=VARCHAR},
		  </if>
		  <if test="password != null">
		    password = #{password,jdbcType=VARCHAR},
		  </if>
		  <if test="status != null">
		    status = #{status,jdbcType=VARCHAR},
		  </if>
		  <if test="type != null">
		    type = #{type,jdbcType=VARCHAR},
		  </if>
		  <if test="isvalid != null">
		    isvalid = #{isvalid,jdbcType=CHAR},
		  </if>
		  <if test="createTime != null">
		    create_time = #{createTime,jdbcType=TIMESTAMP},
		  </if>
		  <if test="updateTime != null">
		    update_time = #{updateTime,jdbcType=TIMESTAMP},
		  </if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	
	<update id="updateByStudentId" parameterType="cn.blaze.domain.UserInfo">
		update user_info
		<set>
		  <if test="userName != null">
		    user_name = #{userName,jdbcType=VARCHAR},
		  </if>
		  <if test="password != null">
		    password = #{password,jdbcType=VARCHAR},
		  </if>
		  <if test="status != null">
		    status = #{status,jdbcType=VARCHAR},
		  </if>
		  <if test="type != null">
		    type = #{type,jdbcType=VARCHAR},
		  </if>
		  <if test="isvalid != null">
		    isvalid = #{isvalid,jdbcType=CHAR},
		  </if>
		</set>
		where student_id = #{studentId,jdbcType=VARCHAR}
	</update>
  <!-- 
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  
  <insert id="insertSelective" parameterType="cn.blaze.domain.UserInfo">
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="isvalid != null">
        isvalid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="isvalid != null">
        #{isvalid,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="cn.blaze.domain.UserInfo">
    update user_info
    set student_id = #{studentId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      isvalid = #{isvalid,jdbcType=CHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update> -->
</mapper>